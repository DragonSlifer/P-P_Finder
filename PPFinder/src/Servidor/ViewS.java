/*
 *  
 */
package Servidor;
import java.util.TimerTask;

public class ViewS extends javax.swing.JFrame {
    
    private ControllerS controlador;

    /**
     * Creates new form MainFrame
     */
    public ViewS() {
        initComponents();
        this.setVisible(true);
        controlador = new ControllerS(consola);
        
        //Timer time = new Timer();
        //time.schedule(new UpdateMapMethod(this), 0, 20000);  ///< Crea una tarea que se encarga de actualizar el mapa
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        servidorLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        consola = new javax.swing.JTextArea();
        iniciaButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("P&P Finder 0.1");
        setResizable(false);

        jPanel1.setLayout(new java.awt.BorderLayout());

        servidorLabel.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        servidorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        servidorLabel.setText("Servidor");
        jPanel1.add(servidorLabel, java.awt.BorderLayout.PAGE_START);

        consola.setEditable(false);
        consola.setBackground(new java.awt.Color(0, 0, 0));
        consola.setColumns(20);
        consola.setForeground(new java.awt.Color(255, 255, 255));
        consola.setRows(5);
        jScrollPane1.setViewportView(consola);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        iniciaButton.setText("Iniciar servidor");
        iniciaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciaButtonActionPerformed(evt);
            }
        });
        jPanel1.add(iniciaButton, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciaButtonActionPerformed
        controlador.iniciarServidor();
        iniciaButton.setEnabled(false);
    }//GEN-LAST:event_iniciaButtonActionPerformed

    private void UpdateMap() {
        ///< Este metodo actualiza el mapa
        consola.setText(controlador.UpdateMap());
    }

    private void SendInfo() {
        ////< Este metodo mandarÃ¡ informacion a los demas usuarios
        controlador.SendInfo();
    }

    private class UpdateMapMethod extends TimerTask {

        private ViewS m;

        public UpdateMapMethod(ViewS m) {
            this.m = m;
        }

        @Override
        public void run() {
            try {
                m.UpdateMap();          ///< Recibir
                m.SendInfo();           ///< Enviar
            } catch (Exception ex) {
                System.out.println("Error Updating Map: " + ex.getMessage());
            }
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea consola;
    private javax.swing.JButton iniciaButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel servidorLabel;
    // End of variables declaration//GEN-END:variables
}
